{"ast":null,"code":"var _jsxFileName = \"/Users/ashish/Desktop/GuruDev/client/src/Pages/Questions/Comment.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { postComment } from '../../actions/question';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comment = () => {\n  _s();\n\n  const User = useSelector(state => state.currentUserReducer);\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  const Navigate = useNavigate();\n  console.log();\n  const [comment, setComment] = useState('');\n\n  const handleComment = e => {\n    e.preventDefault();\n\n    if (User === null) {\n      alert('Login or Signup to answer a question');\n      Navigate('/Auth');\n    } else {\n      if (comment === '') {\n        alert('Enter an answer before submitting');\n      } else {\n        dispatch(postComment({\n          id,\n          commentBody: comment,\n          userCommented: User.result.name\n        }));\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"commentbox\",\n    children: User && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          handleComment(e);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"comment\",\n          children: [\"comment:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"comment\",\n            name: \"comment\",\n            onChange: e => {\n              setComment(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"Submit\",\n          style: {\n            color: 'white',\n            fontSize: '13px',\n            padding: '5px 5px',\n            backgroundColor: '#009dff',\n            borderRadius: '4px',\n            marginLeft: '2px',\n            cursor: 'pointer',\n            transition: '0.2s'\n          },\n          value: \"post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comment, \"B6TqwbDO5QZrgi+nbdGHlWf1/eQ=\", false, function () {\n  return [useSelector, useParams, useDispatch, useNavigate];\n});\n\n_c = Comment;\nexport default Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["/Users/ashish/Desktop/GuruDev/client/src/Pages/Questions/Comment.jsx"],"names":["React","useState","useParams","useNavigate","useSelector","useDispatch","postComment","Comment","User","state","currentUserReducer","id","dispatch","Navigate","console","log","comment","setComment","handleComment","e","preventDefault","alert","commentBody","userCommented","result","name","target","value","color","fontSize","padding","backgroundColor","borderRadius","marginLeft","cursor","transition"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA6B,OAA7B;AACA,SAAUC,SAAV,EAAoBC,WAApB,QAAuC,kBAAvC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,WAAR,QAA0B,wBAA1B;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAElB,QAAMC,IAAI,GAAGJ,WAAW,CAAEK,KAAD,IAAYA,KAAK,CAACC,kBAAnB,CAAxB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAST,SAAS,EAAxB;AACA,QAAMU,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,QAAQ,GAAGV,WAAW,EAA5B;AACAW,EAAAA,OAAO,CAACC,GAAR;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAuBhB,QAAQ,CAAC,EAAD,CAArC;;AACA,QAAMiB,aAAa,GAAIC,CAAD,IAAM;AACxBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAGZ,IAAI,KAAK,IAAZ,EAAiB;AACba,MAAAA,KAAK,CAAC,sCAAD,CAAL;AACAR,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACH,KAHD,MAGK;AACD,UAAGG,OAAO,KAAK,EAAf,EAAkB;AACdK,QAAAA,KAAK,CAAC,mCAAD,CAAL;AACH,OAFD,MAEM;AACFT,QAAAA,QAAQ,CAACN,WAAW,CAAC;AAAEK,UAAAA,EAAF;AAAMW,UAAAA,WAAW,EAAEN,OAAnB;AAA4BO,UAAAA,aAAa,EAAEf,IAAI,CAACgB,MAAL,CAAYC;AAAvD,SAAD,CAAZ,CAAR;AACH;AACJ;AACJ,GAZD;;AAaF,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,cAEIjB,IAAI,iBACA;AAAA,6BACI;AAAM,QAAA,QAAQ,EAAIW,CAAD,IAAO;AAAED,UAAAA,aAAa,CAACC,CAAD,CAAb;AAAkB,SAA5C;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,SAAf;AAAA,8CACE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,EAAE,EAAC,SAAtB;AAAgC,YAAA,IAAI,EAAC,SAArC;AAA+C,YAAA,QAAQ,EAAGA,CAAD,IAAO;AAACF,cAAAA,UAAU,CAACE,CAAC,CAACO,MAAF,CAASC,KAAV,CAAV;AAA2B;AAA5F;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIC;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAsB,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAC,OAAR;AAAiBC,YAAAA,QAAQ,EAAC,MAA1B;AAAkCC,YAAAA,OAAO,EAAC,SAA1C;AAAoDC,YAAAA,eAAe,EAAE,SAArE;AAA+EC,YAAAA,YAAY,EAAC,KAA5F;AAAkGC,YAAAA,UAAU,EAAC,KAA7G;AAAmHC,YAAAA,MAAM,EAAC,SAA1H;AAAoIC,YAAAA,UAAU,EAAC;AAA/I,WAA7B;AAAqL,UAAA,KAAK,EAAC;AAA3L;AAAA;AAAA;AAAA;AAAA,gBAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAxCD;;GAAM5B,O;UAEWH,W,EACEF,S,EACEG,W,EACAF,W;;;KALfI,O;AA0CN,eAAeA,OAAf","sourcesContent":["import React ,{useState}from 'react'\nimport {  useParams,useNavigate } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {postComment} from '../../actions/question'\n\nconst Comment = () => {\n\n    const User = useSelector((state) => (state.currentUserReducer))\n    const { id } = useParams()\n    const dispatch = useDispatch()\n    const Navigate = useNavigate()\n    console.log();\n    const [comment, setComment]= useState('');\n    const handleComment = (e) =>{\n        e.preventDefault()\n        if(User === null){\n            alert('Login or Signup to answer a question')\n            Navigate('/Auth')\n        }else{\n            if(comment === ''){\n                alert('Enter an answer before submitting')\n            } else{\n                dispatch(postComment({ id, commentBody: comment, userCommented: User.result.name }))\n            }\n        }\n    }\n  return (\n    <div className='commentbox'>\n    {\n        User && (\n            <div>\n                <form onSubmit={ (e) => { handleComment(e) }}>\n                  <label htmlFor=\"comment\">comment:\n                    <input type=\"text\" id=\"comment\" name=\"comment\" onChange={(e) => {setComment(e.target.value)}}/>\n                  </label>\n                 <input type=\"Submit\"  style={{ color:'white', fontSize:'13px', padding:'5px 5px',backgroundColor: '#009dff',borderRadius:'4px',marginLeft:'2px',cursor:'pointer',transition:'0.2s'}} value='post'/>\n\n                </form>\n                \n            </div>\n            \n        )\n    }   \n </div>\n  )\n}\n\nexport default Comment"]},"metadata":{},"sourceType":"module"}