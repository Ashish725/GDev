{"ast":null,"code":"import axios from'axios';var API=axios.create({baseURL:'https://gdev7.herokuapp.com'});API.interceptors.request.use(function(req){if(localStorage.getItem('Profile')){req.headers.authorization=\"Bearer \".concat(JSON.parse(localStorage.getItem('Profile')).token);}return req;});export var logIn=function logIn(authData){return API.post('/user/login',authData);};export var signUp=function signUp(authData){return API.post('/user/signup',authData);};export var postQuestion=function postQuestion(questionData){return API.post('/questions/Ask',questionData);};export var getAllQuestions=function getAllQuestions(){return API.get('/questions/get');};export var deleteQuestion=function deleteQuestion(id){return API.delete(\"/questions/delete/\".concat(id));};export var voteQuestion=function voteQuestion(id,value){return API.patch(\"/questions/vote/\".concat(id),{value:value});};export var postAnswer=function postAnswer(id,noOfAnswers,answerBody,userAnswered){return API.patch(\"/answer/post/\".concat(id),{noOfAnswers:noOfAnswers,answerBody:answerBody,userAnswered:userAnswered});};export var postComment=function postComment(id,commentansBody,userCommentedans){return API.patch(\"/answer/post/\".concat(id),{commentansBody:commentansBody,userCommentedans:userCommentedans});};export var deleteAnswer=function deleteAnswer(id,answerId,noOfAnswers){return API.patch(\"/answer/delete/\".concat(id),{answerId:answerId,noOfAnswers:noOfAnswers});};export var getAllUsers=function getAllUsers(){return API.get('/user/getAllUsers');};export var updateProfile=function updateProfile(id,updateData){return API.patch(\"/user/update/\".concat(id),updateData);};","map":{"version":3,"sources":["/Users/ashish/Desktop/GuruDev/client/src/api/index.js"],"names":["axios","API","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","authorization","JSON","parse","token","logIn","authData","post","signUp","postQuestion","questionData","getAllQuestions","get","deleteQuestion","id","delete","voteQuestion","value","patch","postAnswer","noOfAnswers","answerBody","userAnswered","postComment","commentansBody","userCommentedans","deleteAnswer","answerId","getAllUsers","updateProfile","updateData"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nconst API = axios.create({ baseURL: 'https://gdev7.herokuapp.com'})\n\nAPI.interceptors.request.use((req) => {\n    if(localStorage.getItem('Profile')){\n        req.headers.authorization = `Bearer ${JSON.parse(localStorage.getItem('Profile')).token}`\n    }\n    return req;\n})\n\nexport const logIn = (authData) => API.post('/user/login', authData);\nexport const signUp = (authData) => API.post('/user/signup', authData);\n\nexport const postQuestion = (questionData) => API.post('/questions/Ask', questionData)\nexport const getAllQuestions = () => API.get('/questions/get');\nexport const deleteQuestion = (id) => API.delete(`/questions/delete/${id}`) \nexport const voteQuestion = (id, value ) => API.patch(`/questions/vote/${id}`, { value })\n\nexport const postAnswer = (id, noOfAnswers, answerBody, userAnswered ) => API.patch(`/answer/post/${id}`, { noOfAnswers, answerBody, userAnswered })\nexport const postComment = (id, commentansBody, userCommentedans ) => API.patch(`/answer/post/${id}`, { commentansBody, userCommentedans  })\nexport const deleteAnswer = (id, answerId, noOfAnswers) => API.patch(`/answer/delete/${id}`, { answerId, noOfAnswers})\n\nexport const getAllUsers = () => API.get('/user/getAllUsers');\nexport const updateProfile = (id, updateData) => API.patch(`/user/update/${id}`, updateData)"]},"metadata":{},"sourceType":"module"}