{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: 'https://gdev7.herokuapp.com'\n});\nAPI.interceptors.request.use(req => {\n  if (localStorage.getItem('Profile')) {\n    req.headers.authorization = `Bearer ${JSON.parse(localStorage.getItem('Profile')).token}`;\n  }\n\n  return req;\n});\nexport const logIn = authData => API.post('/user/login', authData);\nexport const signUp = authData => API.post('/user/signup', authData);\nexport const postQuestion = questionData => API.post('/questions/Ask', questionData);\nexport const getAllQuestions = () => API.get('/questions/get');\nexport const deleteQuestion = id => API.delete(`/questions/delete/${id}`);\nexport const voteQuestion = (id, value) => API.patch(`/questions/vote/${id}`, {\n  value\n});\nexport const postAnswer = (id, noOfAnswers, answerBody, userAnswered) => API.patch(`/answer/post/${id}`, {\n  noOfAnswers,\n  answerBody,\n  userAnswered\n});\nexport const postComment = (id, commentansBody, userAnswered) => API.patch(`/answer/post/${id}`, {\n  noOfAnswers,\n  answerBody,\n  userAnswered\n});\nexport const deleteAnswer = (id, answerId, noOfAnswers) => API.patch(`/answer/delete/${id}`, {\n  answerId,\n  noOfAnswers\n});\nexport const getAllUsers = () => API.get('/user/getAllUsers');\nexport const updateProfile = (id, updateData) => API.patch(`/user/update/${id}`, updateData);","map":{"version":3,"sources":["/Users/ashish/Desktop/GuruDev/client/src/api/index.js"],"names":["axios","API","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","authorization","JSON","parse","token","logIn","authData","post","signUp","postQuestion","questionData","getAllQuestions","get","deleteQuestion","id","delete","voteQuestion","value","patch","postAnswer","noOfAnswers","answerBody","userAnswered","postComment","commentansBody","deleteAnswer","answerId","getAllUsers","updateProfile","updateData"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAAb,CAAZ;AAEAF,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA8BC,GAAD,IAAS;AAClC,MAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAH,EAAmC;AAC/BF,IAAAA,GAAG,CAACG,OAAJ,CAAYC,aAAZ,GAA6B,UAASC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,EAA4CK,KAAM,EAAxF;AACH;;AACD,SAAOP,GAAP;AACH,CALD;AAOA,OAAO,MAAMQ,KAAK,GAAIC,QAAD,IAAcf,GAAG,CAACgB,IAAJ,CAAS,aAAT,EAAwBD,QAAxB,CAA5B;AACP,OAAO,MAAME,MAAM,GAAIF,QAAD,IAAcf,GAAG,CAACgB,IAAJ,CAAS,cAAT,EAAyBD,QAAzB,CAA7B;AAEP,OAAO,MAAMG,YAAY,GAAIC,YAAD,IAAkBnB,GAAG,CAACgB,IAAJ,CAAS,gBAAT,EAA2BG,YAA3B,CAAvC;AACP,OAAO,MAAMC,eAAe,GAAG,MAAMpB,GAAG,CAACqB,GAAJ,CAAQ,gBAAR,CAA9B;AACP,OAAO,MAAMC,cAAc,GAAIC,EAAD,IAAQvB,GAAG,CAACwB,MAAJ,CAAY,qBAAoBD,EAAG,EAAnC,CAA/B;AACP,OAAO,MAAME,YAAY,GAAG,CAACF,EAAD,EAAKG,KAAL,KAAgB1B,GAAG,CAAC2B,KAAJ,CAAW,mBAAkBJ,EAAG,EAAhC,EAAmC;AAAEG,EAAAA;AAAF,CAAnC,CAArC;AAEP,OAAO,MAAME,UAAU,GAAG,CAACL,EAAD,EAAKM,WAAL,EAAkBC,UAAlB,EAA8BC,YAA9B,KAAgD/B,GAAG,CAAC2B,KAAJ,CAAW,gBAAeJ,EAAG,EAA7B,EAAgC;AAAEM,EAAAA,WAAF;AAAeC,EAAAA,UAAf;AAA2BC,EAAAA;AAA3B,CAAhC,CAAnE;AACP,OAAO,MAAMC,WAAW,GAAG,CAACT,EAAD,EAAKU,cAAL,EAAqBF,YAArB,KAAuC/B,GAAG,CAAC2B,KAAJ,CAAW,gBAAeJ,EAAG,EAA7B,EAAgC;AAAEM,EAAAA,WAAF;AAAeC,EAAAA,UAAf;AAA2BC,EAAAA;AAA3B,CAAhC,CAA3D;AACP,OAAO,MAAMG,YAAY,GAAG,CAACX,EAAD,EAAKY,QAAL,EAAeN,WAAf,KAA+B7B,GAAG,CAAC2B,KAAJ,CAAW,kBAAiBJ,EAAG,EAA/B,EAAkC;AAAEY,EAAAA,QAAF;AAAYN,EAAAA;AAAZ,CAAlC,CAApD;AAEP,OAAO,MAAMO,WAAW,GAAG,MAAMpC,GAAG,CAACqB,GAAJ,CAAQ,mBAAR,CAA1B;AACP,OAAO,MAAMgB,aAAa,GAAG,CAACd,EAAD,EAAKe,UAAL,KAAoBtC,GAAG,CAAC2B,KAAJ,CAAW,gBAAeJ,EAAG,EAA7B,EAAgCe,UAAhC,CAA1C","sourcesContent":["import axios from 'axios'\n\nconst API = axios.create({ baseURL: 'https://gdev7.herokuapp.com'})\n\nAPI.interceptors.request.use((req) => {\n    if(localStorage.getItem('Profile')){\n        req.headers.authorization = `Bearer ${JSON.parse(localStorage.getItem('Profile')).token}`\n    }\n    return req;\n})\n\nexport const logIn = (authData) => API.post('/user/login', authData);\nexport const signUp = (authData) => API.post('/user/signup', authData);\n\nexport const postQuestion = (questionData) => API.post('/questions/Ask', questionData)\nexport const getAllQuestions = () => API.get('/questions/get');\nexport const deleteQuestion = (id) => API.delete(`/questions/delete/${id}`) \nexport const voteQuestion = (id, value ) => API.patch(`/questions/vote/${id}`, { value })\n\nexport const postAnswer = (id, noOfAnswers, answerBody, userAnswered ) => API.patch(`/answer/post/${id}`, { noOfAnswers, answerBody, userAnswered })\nexport const postComment = (id, commentansBody, userAnswered ) => API.patch(`/answer/post/${id}`, { noOfAnswers, answerBody, userAnswered })\nexport const deleteAnswer = (id, answerId, noOfAnswers) => API.patch(`/answer/delete/${id}`, { answerId, noOfAnswers})\n\nexport const getAllUsers = () => API.get('/user/getAllUsers');\nexport const updateProfile = (id, updateData) => API.patch(`/user/update/${id}`, updateData)"]},"metadata":{},"sourceType":"module"}