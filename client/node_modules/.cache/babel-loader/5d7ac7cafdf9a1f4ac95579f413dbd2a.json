{"ast":null,"code":"import _slicedToArray from\"/Users/ashish/Desktop/GuruDev/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useParams,useNavigate}from'react-router-dom';import{useSelector,useDispatch}from'react-redux';import{postComment}from'../../actions/question';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Comment=function Comment(){var User=useSelector(function(state){return state.currentUserReducer;});var _useParams=useParams(),id=_useParams.id;var dispatch=useDispatch();var Navigate=useNavigate();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),comment=_useState2[0],setComment=_useState2[1];var handleComment=function handleComment(e){e.preventDefault();if(User===null){alert('Login or Signup to answer a question');Navigate('/Auth');}else{if(comment===''){alert('Enter an answer before submitting');}else{dispatch(postComment({id:id,userId:id,commentBody:comment,userCommented:User.result.name}));}}};return/*#__PURE__*/_jsx(\"div\",{className:\"commentbox\",children:User&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleComment,children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"comment\",children:[\"comment:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"comment\",name:\"comment\",onChange:function onChange(e){setComment(e.target.value);}})]}),/*#__PURE__*/_jsx(\"input\",{type:\"Submit\",style:{color:'white',fontSize:'13px',padding:'5px 5px',backgroundColor:'#009dff',borderRadius:'4px',marginLeft:'2px',cursor:'pointer',transition:'0.2s'},value:\"post\"})]})})});};export default Comment;","map":{"version":3,"sources":["/Users/ashish/Desktop/GuruDev/client/src/Pages/Questions/Comment.jsx"],"names":["React","useState","useParams","useNavigate","useSelector","useDispatch","postComment","Comment","User","state","currentUserReducer","id","dispatch","Navigate","comment","setComment","handleComment","e","preventDefault","alert","userId","commentBody","userCommented","result","name","target","value","color","fontSize","padding","backgroundColor","borderRadius","marginLeft","cursor","transition"],"mappings":"2JAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA6B,OAA7B,CACA,OAAUC,SAAV,CAAoBC,WAApB,KAAuC,kBAAvC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAAQC,WAAR,KAA0B,wBAA1B,C,wFAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CAElB,GAAMC,CAAAA,IAAI,CAAGJ,WAAW,CAAC,SAACK,KAAD,QAAYA,CAAAA,KAAK,CAACC,kBAAlB,EAAD,CAAxB,CAFkB,eAGHR,SAAS,EAHN,CAGVS,EAHU,YAGVA,EAHU,CAIlB,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CACA,GAAMQ,CAAAA,QAAQ,CAAGV,WAAW,EAA5B,CALkB,cAOWF,QAAQ,CAAC,EAAD,CAPnB,wCAOXa,OAPW,eAOFC,UAPE,eAQlB,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAM,CACxBA,CAAC,CAACC,cAAF,GACA,GAAGV,IAAI,GAAK,IAAZ,CAAiB,CACbW,KAAK,CAAC,sCAAD,CAAL,CACAN,QAAQ,CAAC,OAAD,CAAR,CACH,CAHD,IAGK,CACD,GAAGC,OAAO,GAAK,EAAf,CAAkB,CACdK,KAAK,CAAC,mCAAD,CAAL,CACH,CAFD,IAEM,CAEFP,QAAQ,CAACN,WAAW,CAAC,CAAEK,EAAE,CAAFA,EAAF,CAAMS,MAAM,CAACT,EAAb,CAAiBU,WAAW,CAAEP,OAA9B,CAAuCQ,aAAa,CAAEd,IAAI,CAACe,MAAL,CAAYC,IAAlE,CAAD,CAAZ,CAAR,CACH,CACJ,CACJ,CAbD,CAcF,mBACE,YAAK,SAAS,CAAC,YAAf,UAEIhB,IAAI,eACA,kCACI,cAAM,QAAQ,CAAGQ,aAAjB,wBACE,eAAO,OAAO,CAAC,SAAf,mCACE,cAAO,IAAI,CAAC,MAAZ,CAAmB,EAAE,CAAC,SAAtB,CAAgC,IAAI,CAAC,SAArC,CAA+C,QAAQ,CAAE,kBAACC,CAAD,CAAO,CAACF,UAAU,CAACE,CAAC,CAACQ,MAAF,CAASC,KAAV,CAAV,CAA2B,CAA5F,EADF,GADF,cAIC,cAAO,IAAI,CAAC,QAAZ,CAAsB,KAAK,CAAE,CAAEC,KAAK,CAAC,OAAR,CAAiBC,QAAQ,CAAC,MAA1B,CAAkCC,OAAO,CAAC,SAA1C,CAAoDC,eAAe,CAAE,SAArE,CAA+EC,YAAY,CAAC,KAA5F,CAAkGC,UAAU,CAAC,KAA7G,CAAmHC,MAAM,CAAC,SAA1H,CAAoIC,UAAU,CAAC,MAA/I,CAA7B,CAAqL,KAAK,CAAC,MAA3L,EAJD,GADJ,EAHR,EADF,CAmBD,CAzCD,CA2CA,cAAe3B,CAAAA,OAAf","sourcesContent":["import React ,{useState}from 'react'\nimport {  useParams,useNavigate } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {postComment} from '../../actions/question'\n\nconst Comment = () => {\n\n    const User = useSelector((state) => (state.currentUserReducer))\n    const { id } = useParams()\n    const dispatch = useDispatch()\n    const Navigate = useNavigate()\n     \n    const [comment, setComment]= useState('');\n    const handleComment = (e) =>{\n        e.preventDefault()\n        if(User === null){\n            alert('Login or Signup to answer a question')\n            Navigate('/Auth')\n        }else{\n            if(comment === ''){\n                alert('Enter an answer before submitting')\n            } else{\n                \n                dispatch(postComment({ id, userId:id, commentBody: comment, userCommented: User.result.name }))\n            }\n        }\n    }\n  return (\n    <div className='commentbox'>\n    {\n        User && (\n            <div>\n                <form onSubmit={ handleComment}>\n                  <label htmlFor=\"comment\">comment:\n                    <input type=\"text\" id=\"comment\" name=\"comment\" onChange={(e) => {setComment(e.target.value)}}/>\n                  </label>\n                 <input type=\"Submit\"  style={{ color:'white', fontSize:'13px', padding:'5px 5px',backgroundColor: '#009dff',borderRadius:'4px',marginLeft:'2px',cursor:'pointer',transition:'0.2s'}} value='post'/>\n\n                </form>\n                \n            </div>\n            \n        )\n    }   \n </div>\n  )\n}\n\nexport default Comment"]},"metadata":{},"sourceType":"module"}